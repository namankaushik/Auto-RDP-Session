name: Enable RDP Session
on:
  workflow_dispatch:
jobs:
  enable-rdp:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Enable RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0
          Write-Host "RDP has been enabled with full access"
        shell: powershell
      
      - name: Set RDP credentials with full rights
        run: |
          net user Administrator Win@2025RDPEz! /active:yes
          Write-Host "Administrator account enabled with password set"
          Write-Host "Username: Administrator"
          Write-Host "Password: Win@2025RDPEz!"
        shell: powershell
      
      - name: Install ngrok
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive -Path "ngrok.zip" -DestinationPath "C:\ngrok"
          Write-Host "ngrok installed successfully"
        shell: powershell
      
      - name: Authenticate ngrok
        run: |
          C:\ngrok\ngrok.exe config add-authtoken $env:NGROK_TOKEN
          Write-Host "ngrok authenticated successfully"
        shell: powershell
        env:
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
      
      - name: Start ngrok tunnel
        run: |
          Start-Process -FilePath "C:\ngrok\ngrok.exe" -ArgumentList "tcp", "3389" -NoNewWindow
          Write-Host "ngrok tunnel process started for RDP (port 3389)"
        shell: powershell
      
      - name: Wait for ngrok to initialize
        run: |
          Write-Host "Waiting for ngrok to fully initialize..."
          $maxAttempts = 15
          $attempt = 0
          $ngrokReady = $false
          
          while ($attempt -lt $maxAttempts -and -not $ngrokReady) {
            Start-Sleep -Seconds 2
            $attempt++
            try {
              $response = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels" -TimeoutSec 2
              if ($response.tunnels.Count -gt 0) {
                $ngrokReady = $true
                Write-Host "ngrok API is ready after $($attempt * 2) seconds"
              }
            } catch {
              Write-Host "Attempt $attempt: ngrok API not ready yet..."
            }
          }
          
          if (-not $ngrokReady) {
            Write-Host "Warning: ngrok might not be fully ready, but continuing..."
          }
        shell: powershell
      
      - name: Get ngrok connection info
        run: |
          try {
            $response = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels"
            $publicUrl = $response.tunnels[0].public_url
            Write-Host "========================================"
            Write-Host "RDP CONNECTION INFORMATION"
            Write-Host "========================================"
            Write-Host "ngrok Public URL: $publicUrl"
            Write-Host "Username: Administrator"
            Write-Host "Password: Win@2025RDPEz!"
            Write-Host "========================================"
            
            # Save connection info to file
            $connectionInfo = "RDP Connection Information`n"
            $connectionInfo += "==========================`n"
            $connectionInfo += "ngrok URL: $publicUrl`n"
            $connectionInfo += "Username: Administrator`n"
            $connectionInfo += "Password: Win@2025RDPEz!`n"
            $connectionInfo += "`n"
            $connectionInfo += "Instructions:`n"
            $connectionInfo += "1. Use Remote Desktop Connection client`n"
            $connectionInfo += "2. Connect to the ngrok URL (remove tcp:// prefix and use format: hostname:port)`n"
            $connectionInfo += "3. Enter the credentials above when prompted`n"
            $connectionInfo += "4. User has full administrator rights`n"
            
            $connectionInfo | Out-File -FilePath "rdp-connection-info.txt"
            Write-Host "Connection info saved to rdp-connection-info.txt"
          } catch {
            Write-Host "ERROR: Could not retrieve ngrok URL. Error: $_"
            Write-Host "Make sure NGROK_TOKEN secret is properly configured"
            exit 1
          }
        shell: powershell
      
      - name: Upload connection info
        uses: actions/upload-artifact@v4
        with:
          name: rdp-connection-info
          path: rdp-connection-info.txt
      
      - name: Keep session alive
        run: |
          Write-Host "========================================"
          Write-Host "RDP session is ready!"
          Write-Host "Keeping workflow alive for 6 hours..."
          Write-Host "Download the artifact 'rdp-connection-info' for connection details"
          Write-Host "========================================"
          Start-Sleep -Seconds 21600
        shell: powershell
